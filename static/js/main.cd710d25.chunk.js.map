{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","map","tab","className","cn","id","href","onClick","title","content","App","useState","setSelectedTabId","selectedTab","setSelectedTab","useEffect","some","ReactDOM","render","document","getElementById"],"mappings":"kNAcaA,EAAwB,SAAC,GAAD,IACnCC,EADmC,EACnCA,KACAC,EAFmC,EAEnCA,cACAC,EAHmC,EAGnCA,cAHmC,OAKnC,mCACGF,EAAKG,KAAI,SAAAC,GACR,OACE,oBAEE,UAAQ,MACRC,UAAWC,IACT,CAAE,YAAaL,IAAkBG,EAAIG,KAJzC,SAOE,mBACEC,KAAI,WAAMJ,EAAIG,IACd,UAAQ,UACRE,QAAS,WACHR,IAAkBG,EAAIG,IACxBL,EAAcE,IALpB,SASGA,EAAIM,SAfFN,EAAIG,UCjBNP,EAAO,CAClB,CAAEO,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAS,SAAnD,mBAAOZ,EAAP,KAAsBa,EAAtB,KACA,EAAsCD,mBAAS,CAC7CN,GAAI,QAASG,MAAO,QAASC,QAAS,gBADxC,mBAAOI,EAAP,KAAoBC,EAApB,KAkBA,OAdAC,qBAAU,WACRH,EAAiBC,EAAYR,MAC5B,CAACQ,IAEJE,qBAAU,WACJjB,EAAKkB,MAAK,SAAAd,GAAG,OAAIA,EAAIG,KAAON,MAIhCe,EAAe,CACbT,GAAI,QAASG,MAAO,QAASC,QAAS,kBAEvC,CAACV,IAGF,sBAAKI,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBU,EAAYL,SAGlC,sBAAK,UAAQ,gBAAb,UACE,qBAAKL,UAAU,gBAAf,SACE,6BACE,cAAC,EAAD,CACEL,KAAMA,EACNC,cAAeA,EACfC,cAAec,QAKrB,qBAAKX,UAAU,QAAQ,UAAQ,aAA/B,SACGU,EAAYJ,iBC/CvBQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cd710d25.chunk.js","sourcesContent":["import cn from 'classnames';\n\ninterface Tab {\n  id: string;\n  title: string;\n  content: string;\n}\n\ninterface Props {\n  tabs: Tab[]\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => (\n  <>\n    {tabs.map(tab => {\n      return (\n        <li\n          key={tab.id}\n          data-cy=\"Tab\"\n          className={cn(\n            { 'is-active': selectedTabId === tab.id },\n          )}\n        >\n          <a\n            href={`#${tab.id}`}\n            data-cy=\"TabLink\"\n            onClick={() => {\n              if (selectedTabId !== tab.id) {\n                onTabSelected(tab);\n              }\n            }}\n          >\n            {tab.title}\n          </a>\n        </li>\n      );\n    })}\n  </>\n);\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n  const [selectedTab, setSelectedTab] = useState({\n    id: 'tab-1', title: 'Tab 1', content: 'Some text 1',\n  });\n\n  useEffect(() => {\n    setSelectedTabId(selectedTab.id);\n  }, [selectedTab]);\n\n  useEffect(() => {\n    if (tabs.some(tab => tab.id === selectedTabId)) {\n      return;\n    }\n\n    setSelectedTab({\n      id: 'tab-1', title: 'Tab 1', content: 'Some text 1',\n    });\n  }, [selectedTabId]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            <Tabs\n              tabs={tabs}\n              selectedTabId={selectedTabId}\n              onTabSelected={setSelectedTab}\n            />\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {selectedTab.content}\n        </div>\n      </div>\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}